name: build/test

on: # when the workflows should be triggered ?
  pull_request: # Starting Build when pull request is created.
    branches: [ "main", "dev"]
  push: 
    branches: ["dev"]

permissions:
  contents: read
  checks: write
  issues: write

jobs: # defining jobs, executed in this workflows
  build:
    runs-on: ubuntu-latest
#    services:
#      redis:
#        image: redis
#        ports:
#          - 6379:6379
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3 # clone repository

      # Caching Gradle
    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{  runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Set up JDK 17
      uses: actions/setup-java@v3 # set up the required java version
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Gradle Authorization
      run: chmod +x gradlew

#    # Gradle run
#    - name: Gradle Build Run
#      run: ./gradlew -Dspring.profiles.active=test build

      # Gradle test
    - name: Test with Gradle
      run: ./gradlew -Dspring.profiles.active=test --info test
      # Publish Unit Test Results
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: ${{ always() }}
      with:
        files: "build/test-results/**/*.xml"
    - name: Cleanup Gradle Cache
      if: ${{ always() }}
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties