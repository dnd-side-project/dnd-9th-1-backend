plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.9'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// lombok
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// database
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// FCM
	implementation 'com.google.firebase:firebase-admin:9.1.1'

	// ShedLock
	implementation 'net.javacrumbs.shedlock:shedlock-spring:5.1.0'
	implementation 'net.javacrumbs.shedlock:shedlock-provider-redis-spring:5.1.0'
	implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template:5.1.0'

	// Test
	testImplementation 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}

task copyPrivate(type: Copy) {
	copy {
		from './src/main/resources/config'
		include "*.yml"
		into 'src/main/resources'
	}
}

tasks.withType(Test) {
	systemProperties = System.getProperties()
}

bootRun {
	String activeProfile = System.properties['spring.profiles.active']
	systemProperty "spring.profiles.active", activeProfile
}